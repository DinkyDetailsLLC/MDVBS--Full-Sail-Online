package com.dinkydetails.geosnap;


import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Locale;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.location.Address;
import android.location.Geocoder;
import android.net.Uri;
import android.os.BatteryManager;
import android.os.Bundle;
import android.os.Environment;
import android.provider.Settings;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity implements OnClickListener {
	private static final int CAMERA_PIC_REQUEST = 1111;
	private ImageView mImage;
	private TextView mBatteryInfo;
	private Button mTakePic;
	private Button mSavePic;
	private Button mGetLocation;
	private Button mBatteryStats;

	int level = 0;
	Context ctx;
	GPSTracker gps;
	ByteArrayOutputStream bytes;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		this.registerReceiver(this.batteryInfoReceiver, new IntentFilter(
				Intent.ACTION_BATTERY_CHANGED));

		mBatteryInfo = (TextView) findViewById(R.id.batteryinfo);
		mImage = (ImageView) findViewById(R.id.camera_image);

		mTakePic = (Button) findViewById(R.id.takepic);
		mSavePic = (Button) findViewById(R.id.savepic);
		mGetLocation = (Button) findViewById(R.id.getloc);
		mBatteryStats = (Button) findViewById(R.id.checkbattery);
		mTakePic.setOnClickListener(this);
		mSavePic.setOnClickListener(this);
		mGetLocation.setOnClickListener(this);
		mBatteryStats.setOnClickListener(this);

	}

	private BroadcastReceiver batteryInfoReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			level = intent.getIntExtra(BatteryManager.EXTRA_LEVEL, 0);
		}
	};

	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (requestCode == CAMERA_PIC_REQUEST && data != null) {
			Bitmap thumbnail = (Bitmap) data.getExtras().get("data");
			mImage.setImageBitmap(thumbnail);
			bytes = new ByteArrayOutputStream();
			thumbnail.compress(Bitmap.CompressFormat.JPEG, 100, bytes);
		} else {
			Toast.makeText(this, "No Picture Clicked", Toast.LENGTH_SHORT)
					.show();
		}
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.takepic:
			Intent intent = new Intent(
					android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
			startActivityForResult(intent, CAMERA_PIC_REQUEST);
			break;

		case R.id.savepic:
			if (bytes != null) {
				Toast.makeText(this, "Picture saved successfully",
						Toast.LENGTH_SHORT);
				String path = Environment.getExternalStorageDirectory()
						.toString();
				new File(path + "/DanPics").mkdirs();
				File file = new File(path + "/DanPics/" + "pic.jpg");
				try {
					file.createNewFile();
					FileOutputStream fo = new FileOutputStream(file);
					fo.write(bytes.toByteArray());
					fo.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			} else {
				Toast.makeText(this, "No Picture clicked to Save",
						Toast.LENGTH_SHORT).show();
			}

			break;

		case R.id.getloc:
			gps = new GPSTracker(MainActivity.this);
			if (gps.canGetLocation()) {
				double latitude = gps.getLatitude();
				double longitude = gps.getLongitude();
				mBatteryInfo.setText("Latitude : " + latitude
						+ "/nLongitude : " + longitude
						+ "/nYour Location is - \nLat: " + latitude
						+ "\nLong: " + longitude);
				String address = "Not Found";
				address = findUsersAddress(latitude, longitude);
				mBatteryInfo.setText(address);
			} else {
				gps.showSettingsAlert();
			}

			break;

		case R.id.checkbattery:
			mBatteryInfo.setText("Current level of battery is : " + level);
			if (level < 20) {
				mBatteryInfo.setText("Current level of battery is : " + level
						+ ".\nGPS is turned off.");
				turnGPSOnOff();
			} else {
				mBatteryInfo
						.setText("Current level of battery is : "
								+ level
								+ ".\n\nGPS will be automatically turned off when battery level reaches below 20.");
			}
			break;
		}

	}

	private String findUsersAddress(double latitude, double longitude) {
		String userAddress = null;
		Geocoder gc = new Geocoder(this, Locale.getDefault());
		try {
			List<Address> addresses = gc
					.getFromLocation(latitude, longitude, 1);
			StringBuilder sb = new StringBuilder();
			if (addresses.size() > 0) {
				Address address = addresses.get(0);
				for (int i = 0; i < address.getMaxAddressLineIndex(); i++) {

					if (address.getAddressLine(i) != null) {
						sb.append(address.getAddressLine(i)).append("\n");
					}
				}

				if (address.getLocality() != null) {
					sb.append(address.getLocality()).append("\n");
				}

				if (address.getPostalCode() != null) {
					sb.append(address.getPostalCode()).append("\n");
				}

				if (address.getCountryName() != null) {
					sb.append(address.getCountryName());
				}
			}

			userAddress = sb.toString();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {

		}
		return userAddress;
	}

	private void turnGPSOnOff() {
		String provider = Settings.Secure.getString(getContentResolver(),
				Settings.Secure.LOCATION_PROVIDERS_ALLOWED);
		if (!provider.contains("gps")) {
			final Intent poke = new Intent();
			poke.setClassName("com.android.settings",
					"com.android.settings.widget.SettingsAppWidgetProvider");
			poke.addCategory(Intent.CATEGORY_ALTERNATIVE);
			poke.setData(Uri.parse("3"));
			sendBroadcast(poke);
		}
	}
}
