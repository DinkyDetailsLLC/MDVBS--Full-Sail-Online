package com.dinkydetails.telly;

import java.io.File;

import com.dinkydetails.telly.Utils.Utils;
import com.dinkydetails.telly.db.DatabaseHelper;
import com.dinkydetails.telly.model.Contact;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.ContentValues;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.provider.MediaStore.Audio.Media;
import android.provider.MediaStore.Images;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.inputmethod.EditorInfo;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;
import android.widget.Toast;

public class AddContactActivity extends Activity{
	
	
	private Uri mCurrentUri ;
	private String strError = "";
	private String strImagePath = null;
	private DatabaseHelper dbHelper;
	private Contact cObj = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.add_contact);
		
		init();
		
		Intent iContactListActivity = getIntent();
		
		cObj = (Contact) iContactListActivity.getSerializableExtra(AppConstants.CURRENT_OBJ);
		
		if(cObj != null)
		setInformation(cObj);
			
		
	}
	
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		switch (requestCode) {
		case AppConstants.REQUEST_GET_IMGE_FRM_GALLERY:
			
			{
				if (resultCode != Activity.RESULT_OK) 
					return;
				else
				{			
					String uri = data.getDataString();
					
					if(AppConstants.DEBUG)Log.v(AppConstants.DEBUG_TAG,"Gallery uri: "+uri);
					
					strImagePath = Utils.moveBitmap(AddContactActivity.this, uri);
					
					Bitmap croppedImage = Utils.getBmpFromPath(AddContactActivity.this, strImagePath);
					
					((ImageView)findViewById(R.id.ivProfilePic)).setImageBitmap(croppedImage);
					
					break;
				}
			}
		case AppConstants.REQUEST_TAKE_PHOTO_CAMERA:
			{
				if (resultCode != Activity.RESULT_OK) 
					return;
				else 
				{
					Bitmap croppedImage = Utils.getBmpFromPath(AddContactActivity.this, strImagePath);
					
					((ImageView)findViewById(R.id.ivProfilePic)).setImageBitmap(croppedImage);
					
					break;
					
				}
			}
			
		}
	}
	
	private void init()
	{
		dbHelper = new DatabaseHelper(getApplicationContext());
		
		((ImageView)findViewById(R.id.ivProfilePic)).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) 
			{
				getPicture();
				
			}
		});
		
		((Button)findViewById(R.id.btnSave)).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) 
			{				
				if(validation())
				{
					Contact tmpObj = getInformation();
					
					dbHelper.openDb();
					dbHelper.addContact(tmpObj);
					dbHelper.closeDb();
					
					Toast.makeText(getApplicationContext(), "Contact Saved.", Toast.LENGTH_SHORT).show();
					
					finish();
				}
				else
				{
					Toast.makeText(getApplicationContext(), strError, Toast.LENGTH_SHORT).show();
				}
			}
		});
		
		((Button)findViewById(R.id.btnCancel)).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) 
			{				
				finish();
			}
		});
	
		((Button)findViewById(R.id.btnUpdate)).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				if(validation())
				{
					Contact tmpObj = getInformation();
					
					dbHelper.openDb();
					dbHelper.updateContact( tmpObj , cObj.getFirstName() );
					dbHelper.closeDb();
					
					Toast.makeText(getApplicationContext(), "Contact Updated.", Toast.LENGTH_SHORT).show();
					
					finish();
				}
				else
				{
					Toast.makeText(getApplicationContext(), strError, Toast.LENGTH_SHORT).show();
				}
				
				
			}
		});
	}
	
	private void setInformation(Contact cObj)
	{
		((Button)findViewById(R.id.btnSave)).setVisibility(View.GONE);
		((Button)findViewById(R.id.btnUpdate)).setVisibility(View.VISIBLE);
		
		((EditText)findViewById(R.id.etFirstName)).setText(cObj.getFirstName());
		((EditText)findViewById(R.id.etLastName)).setText(cObj.getLastName());
		((EditText)findViewById(R.id.etPhoneNo)).setText(cObj.getPhNo());
		
		Bitmap img = Utils.getBmpFromPath(AddContactActivity.this, cObj.getImagePath());
		
		((ImageView)findViewById(R.id.ivProfilePic)).setImageBitmap(img);
		
		strImagePath = cObj.getImagePath();
		
	}
	
	private Contact getInformation()
	{
		String strFirstName = ((EditText)findViewById(R.id.etFirstName)).getText().toString();
		
		String strLastName = ((EditText)findViewById(R.id.etLastName)).getText().toString();
		
		String strPhNo = ((EditText)findViewById(R.id.etPhoneNo)).getText().toString();
		
		Contact tmpObj = new Contact();
		tmpObj.setFirstName(strFirstName);
		tmpObj.setLastName(strLastName);
		tmpObj.setPhNo(strPhNo);
		tmpObj.setImagePath(strImagePath);
		
		return tmpObj;
	}
	
	private boolean validation()
	{
		
		String strFirstName = ((EditText)findViewById(R.id.etFirstName)).getText().toString();
		
		String strLastName = ((EditText)findViewById(R.id.etLastName)).getText().toString();
		
		String strPhNo = ((EditText)findViewById(R.id.etPhoneNo)).getText().toString();
		
		if(strFirstName.length() == 0)
		{
			strError = "First name should not be empty.";
			return false;
		}
		
		if(strLastName.length() == 0)
		{
			strError = "Last name should not be empty.";
			return false;
		}
		
		if(strPhNo.length() == 0)
		{
			strError = "Phone number should not be empty.";
			return false;
		}
		
		if(strImagePath == null)
		{
			strError = "Please set profile picture.";
			return false;
		}
		
		return true;
		
	}
	
	private void getPicture() 
	{
		new AlertDialog.Builder(AddContactActivity.this).setItems(R.array.getPic,
				new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface arg0, int which) {
						switch (which) {
						case AppConstants.REQUEST_TAKE_PHOTO_CAMERA: 
						{
							try 
							{
								takePhoto();
							}
							catch (Exception e)
							{
							
								e.printStackTrace();
							}
						}
						break;
						
						case AppConstants.REQUEST_GET_IMGE_FRM_GALLERY:
						{
							Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
							intent.setType("image/*");
							startActivityForResult(intent, AppConstants.REQUEST_GET_IMGE_FRM_GALLERY);
						}
							break;

						}

					}
				}).show();
	}
			
	public void takePhoto() throws Exception
	{
		 
		 strImagePath = Utils.getNewImagePath(this);
		 
		 File fImageFile = new File(strImagePath);
		 
		 fImageFile.createNewFile();
		 
		 if(AppConstants.DEBUG)Log.v(AppConstants.DEBUG_TAG,"Path: "+strImagePath);
		 
		 mCurrentUri = Uri.parse(strImagePath);
	
		 Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
		 
		 takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(fImageFile));
		 
		 startActivityForResult(takePictureIntent, AppConstants.REQUEST_TAKE_PHOTO_CAMERA);

	}


}
